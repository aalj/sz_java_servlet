一.多态
	定义:
		一个引用类型的变量,可以指向不同的对象.调用同一个方法,呈现不同的行为(实现不同)
	
	理解:
		父类的引用指向子类的对象.
		
	基础:
		继承+方法重写+动态绑定
		
	形式:
		1.简单多态
			Shape shape = new Circle();
			shape.area();
			shape = new Rect();
			s.area();
		2.数组
		3.方法参数
		4.返回类型
		
	好处:
		1.可扩展性
		2.可维护性
		
面向接口(抽象类)编程:
1.声明一个变量的时,变量的类型为一个接口
2.声明一个数组时,数组元素的类型是一个接口
3.定义一个方法时,方法的参数的类型声明为一个接口
4.定义一个方法时,方法的返回类型声明为一个接口